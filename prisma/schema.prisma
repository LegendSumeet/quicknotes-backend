generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://avnadmin:AVNS_3RUzt0FpS_kq1sNvH22@bun-database-vishwakarmasumeet01-5e50.j.aivencloud.com:24538/defaultdb?sslmode=require"
}

// Define the models

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String?
  sharedNotes  Note[]    @relation("SharedWith")
  notes        Note[]    // Added to fix the relation
  pendingNotes Note[]    @relation("PendingUser")
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
  notebooks    Notebook[]

  // Define the missing opposite relation field
  pendingUser  Notebook[] @relation("PendingUser")
  sharedNotebooks Notebook[] @relation("SharedWith")
}

model Note {
  id          Int       @id @default(autoincrement())
  tags        String[]
  category    String?
  title       String
  content     String
  description String?
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  sharedWith  User[]    @relation("SharedWith")
  pendingUser User[]    @relation("PendingUser")
  updatedAt   DateTime  @updatedAt
  createdAt   DateTime  @default(now())
  notebook    Notebook? @relation(fields: [notebookId], references: [id])
  notebookId  Int?
}

model Notebook {
  id          Int      @id @default(autoincrement())
  title       String
  tags        String[]
  category    String?
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  pendingUser User[]   @relation("PendingUser")
  sharedWith  User[]   @relation("SharedWith")
  notes       Note[]
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}
